% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadJobs.R
\name{loadJobs}
\alias{loadJobs}
\title{Load and maybe enqueue unfinished jobs from the server database.}
\usage{
loadJobs(which = NULL)
}
\arguments{
\item{which}{character scalar or integer scalar, which will be
converted to a character scalar.  Load only jobs whose top job
is in that queue.  If NULL (the default), do not actually load
or queue any jobs.}
}
\value{
the number of jobs enqueued in the new global \code{MOTUS_QUEUE}.
The Jobs are stored in the global \code{Jobs}.
}
\description{
A global object \code{Jobs} is created, which manages jobs.
It is populated from the "jobs" table in the server database.
}
\details{
It has these fixed fields:
\itemize{

\item type: character; type of job

\item done: integer; 0 if not attempted; negative for errors; +1
for successfully finished

\item queue: integer; the queue to which a job belongs; there is one queue
per running processServer().  If queue==0, the job has been enqueued
for processing but not yet claimed by one of the processServers().
If queue is null, it is being handled by emailServer() or pathServer()

\item path: full path to folder for job

\item oldpath: full path to previous folder for job (permits
recovery from server failure during job move)

\item user: username, when job is the top job from an authenticated email

}

Other job items are stored in a JSON-encoded text field called
\code{data}.

For any jobs to be loaded we verify that the "path" field is
correct, in case the server was interrupted while moving a job.
}
\author{
John Brzustowski \email{jbrzusto@REMOVE_THIS_PART_fastmail.fm}
}

