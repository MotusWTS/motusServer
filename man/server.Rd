% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/server.R
\name{server}
\alias{server}
\title{wait for new data files to arrive, then process them}
\usage{
server(handlers)
}
\arguments{
\item{handlers}{list of handlers to be called when a new file or
    folder is added to the incoming directory.  Each handler is a
    function that takes these parameters:

\itemize{

\item path: the full path to the new file or directory

\item isdir: boolean; TRUE iff the path is a directory

}

and returns TRUE iff the handler succeeded in processing the item.

Handlers are called for each file or folder already in the watch
directory, and then for each file or folder created in, moved
into, or linked to from that directory. Successful handlers will
typically move some or all of the files in \code{path} to another
location.

The file or folder at \code{path} will be deleted if any handler
returns TRUE.

The default value of \code{handlers} is:
\code{
list(
   handleEmail,
   handleDownloadableLink,
   handleArchive,
   handleDTAs,
   handleSGs,
   handleOneSG,
   handleLogs,
   handlePath
)
}}
}
\value{
This function does not return; it is meant for use in an R
    script run in the background.
}
\description{
Watch the \code{incoming} directory and when a file or folder is
written or moved to it, call a sequence of handlers until one of
them is successful in processing the item.  Handlers are meant to
perform small, self-contained tasks, such as unpacking a compressed
archive, parsing an email for downloadable links, updating a
receiver database with new files, etc.  This helps limit the effect
of failure of one task.  Moreover, we try to ensure that files are
left in places where they will automatically be retried if this
server function has to be restarted, or can be dealt with manually.
}
\details{
Files or folders already in the watched directory are processed
before any new ones, on the assumption that a previous call to this
function was interrupted.
}
\note{
If a directory is added by creating a symlink to it in the
    \code{incoming} directory, ownership of files in the directory
    remains with the files' creator, and this function will not
    delete them.  Otherwise, ownership is assumed by this function,
    and files are deleted if any handler returns TRUE.
}
\author{
John Brzustowski \email{jbrzusto@REMOVE_THIS_PART_fastmail.fm}
}

