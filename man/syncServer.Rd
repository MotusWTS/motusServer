% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/syncServer.R
\name{syncServer}
\alias{syncServer}
\title{watch for attached receivers and sync files from them}
\usage{
syncServer(tracing = FALSE, fileEvent = "CLOSE_WRITE")
}
\arguments{
\item{tracing}{logical scalar, default FALSE.  If TRUE, enter
debug browser before handling each new file upload.}

\item{fileEvent}{character scalar; default: "CLOSE_WRITE".
Empty files are created in \code{MOTUS_PATH$SYNC} via the
'touch' command, so this is the last event in that case.}
}
\value{
This function does not return; it is meant for use in an R
    script run in the background.
}
\description{
Watch for new files in \code{MOTUS_PATH$SYNC}.  When a file is
found, it's treated as describing a method and serial number for
syncing, and a new syncReceiver job is queued for the receiver, if
there isn't already an unfinished one for it. The syncReceiver job
is queued via /sgm/priority, bypassing jobs running from uploaded
data or manually on the server.  This is to provide relatively low
latency for both users watching online receivers, and because the
internet connection to the receiver might be intermittent.
}
\note{
this depends on some other process creating files in
the folder \code{MOTUS_PATH$SYNC}.  In the motus set-up, this
will be done from the server at sensorgnome.org, which manages
and hosts networked SGs.
}
\seealso{
\link{\code{handleSyncReceiver}}
}
\author{
John Brzustowski \email{jbrzusto@REMOVE_THIS_PART_fastmail.fm}
}
