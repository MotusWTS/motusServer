% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/syncServer.R
\name{syncServer}
\alias{syncServer}
\title{watch for attached receivers and sync files from them}
\usage{
syncServer(tracing = FALSE, fileEvent = "CLOSE_WRITE")
}
\arguments{
\item{tracing}{logical scalar, default FALSE.  If TRUE, enter
debug browser before handling each new file upload.}

\item{fileEvent}{character scalar; default: "CLOSE_WRITE".
Empty files are created in \code{MOTUS_PATH$SYNC} via the
'touch' command, so this is the last event in that case.}
}
\value{
This function does not return; it is meant for use in an R
    script run in the background.
}
\description{
Watch for new files in \code{MOTUS_PATH$SYNC}.  When a file is
found, it's assumed the name is the serial number of an attached
receiver, and a 'syncReceiver' job is queued for that receiver, if
there isn't already an unfinished one for it. The syncReceiver job
is queued via /sgm/priority, bypassing jobs running from uploaded
data or manually on the server.  This is to provide relatively low
latency for both users watching online receivers, and because the
internet connection to the receiver might be intermittent.
}
\note{
this depends on some other process placing uploaded files into
the folder \code{MOTUS_PATH$SYNC}.  This is done by a shell script
launched from the sg_remote program that is run on the server
by each attached receiver.  The last step of the shell script is
to cause its own relaunch after a random time interval, via an
'at' job.
}
\author{
John Brzustowski \email{jbrzusto@REMOVE_THIS_PART_fastmail.fm}
}
\seealso{
\link{\code{handleSyncReceiver}}
}

