% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uploadServer.R
\name{uploadServer}
\alias{uploadServer}
\title{watch for and enqueue uploaded files}
\usage{
uploadServer(tracing = FALSE, fileEvent = "CREATE")
}
\arguments{
\item{tracing}{logical scalar, default FALSE.  If TRUE, enter
debug browser before handling each new file upload.}

\item{fileEvent}{character scalar; default: "CREATE".  The
last filesystem event generated by the external program which
is placing files in the \code{MOTUS_PATH$UPLOADS} folder.
For other upload systems, the appropriate event might be "CLOSE_WRITE"
or "MOVED_TO".  The event should only occur once per uploaded file
and only after the full file contents are available.}
}
\value{
This function does not return; it is meant for use in an R
    script run in the background.  After each subjob is handled,
    the function checks for the existence of a file called
    \code{MOTUS_PATH$INBOX/killE}.  If that file is found,
    the function calls quit(save="no").  The file will also
    be detected within the call to feed() when the queue
    is empty, because it is located in the watched folder.
}
\description{
Watch for new files in \code{MOTUS_PATH$UPLOADS};
and when a new file is found, queue a job to process it.
}
\note{
this depends on some other process placing uploaded files into
the folder \code{MOTUS_PATH$UPLOADS}.  We're using a patched version of
\link{http://http://www.projectsend.org}
whose last task for an uploaded file is to create a hardlink to it
in \code{MOTUS_PATH$UPLOADS}, and this generates a "CREATE" event.
}
\author{
John Brzustowski \email{jbrzusto@REMOVE_THIS_PART_fastmail.fm}
}

