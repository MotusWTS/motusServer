% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_request.R
\name{validate_request}
\alias{validate_request}
\title{validate an API request by looking up its token}
\usage{
validate_request(json, needProjectID = TRUE, needAdmin = FALSE,
  remoteIP = NULL)
}
\arguments{
\item{json}{named list with at least these items:
\itemize{
\item authToken authorization token or authorization ticket
\item projectID (optional) projectID
}
An authorization ticket is the cookie generated by Apache's mod-auth-tkt.
It is distinguished by including at least one '!' character, which tokens
never contain.}

\item{needProjectID}{logical; if TRUE, a projectID to which the user
has permission must be in \code{json}; default:  TRUE}

\item{needAdmin}{logical; if TRUE, the user must have userType="administrator"
in order to use the entry point; default:  FALSE}

\item{remoteIP}{character; a dotted-quad string representing the remote IP address.
Only used if the \code{json$authToken} is a ticket (i.e. contains at least one '!' character)
Default: NULL}
}
\value{
If the request was valid, a list with these items:
\itemize{
\item userID integer user ID
\item projects integer vector of *all* project IDs user has permission to
\item projectID the projectID specified in the request (and it is guaranteed the user has permission to this project)
}

If the request was not valid, a value of class "error" and suitable
for return by a Rook app, which contains an appropriate error
message.  This value should be immediately returned by the caller.

So typical usage is like:
\code{
   auth = validate_request(json, needProjectID=FALSE)
   if (inherits(auth, "error")) return(auth)
   projectID = auth$projectID
}
}
\description{
validate an API request by looking up its token
}
\note{
this function is meant for use inside Rook servers, such as \link{\code{dataServer}}
and \link{\code{statusServer}} in this package.
}
\author{
John Brzustowski \email{jbrzusto@REMOVE_THIS_PART_fastmail.fm}
}
