% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unpackEmail.R
\name{unpackEmail}
\alias{unpackEmail}
\title{Unpack an email message, returning the text portion.}
\usage{
unpackEmail(msg, dir, headers = c("From", "Reply-To", "Subject"),
  maxHeaderLines = 500)
}
\arguments{
\item{msg}{path to the raw email message}

\item{dir}{path to folder where message parts should be unpacked}

\item{headers}{character vector of message header lines to include at the
start of the returned message.  Defaults to \code{"Subject"}.}

\item{maxHeaderLines}{maximum number of lines assumed to be headers in
the message.}
}
\value{
a character scalar consisting of any selected headers
    followed by the texts part of the message.  All text parts are
    returned so that messages forwarded as attachments can be
    blessed with a token. e.g. if I receive an email without a
    token, but trust the sender and content, I can forward the
    message as an attachment to data@sensorgnome.org with my own
    token in the subject or body of a new email.

If the message is not a multi-part mime message, the full text of
the message is returned instead.
}
\description{
Unpacks a raw RFC-822 style email message, possibly with
attachments, into the "attachments" subdirectory, and return the
concatenation of all text parts, possibly preceded by some headers.
}
\note{
Trailing DOS-style newlines are translated into unix-style newlines
before unpacking the message, since \code{munpack} can't handle this.
}
\author{
John Brzustowski \email{jbrzusto@REMOVE_THIS_PART_fastmail.fm}
}

