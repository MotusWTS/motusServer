% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/safeSQL.R
\name{safeSQL}
\alias{safeSQL}
\title{Return a function that safely performs sql queries on a connection,
by use of dbGetPreparedQuery when needed.  This prevents e.g.
SQL injection attacks.}
\usage{
safeSQL(con, busyTimeout = 10)
}
\arguments{
\item{con}{RSQLite connection to database, as returned by
dbConnect(SQLite(), ...), or character scalar giving path
to SQLite database}

\item{busyTimeout}{how many total seconds to wait while retrying a
locked database.  Default: 10.  Uses \code{pragma busy_timeout}
to allow for inter-process DB locking.}
}
\value{
a function taking two or more parameters:
\itemize{

\item \code{query} sqlite query; parameters are words beginning
with ":"

\item \code{...} list of named items specifying values for named
parameters in query.  e.g. if \code{query} contains the named
parameters \code{:address} and \code{:phone}, then \code{...} must
look like \code{address=c("123 West Blvd, Truro, NS",
"5 East St., Digby, NS"), phone=c("902-555-1234", "902-555-6789")}
These items are passed to \code{data.frame}, along with the
parameter \code{stringsAsFactors=FALSE}.

\item \code{.CLOSE} boolean scalar; if TRUE, close the underlying
database connection, disabling further use of this function.

}
}
\description{
Return a function that safely performs sql queries on a connection,
by use of dbGetPreparedQuery when needed.  This prevents e.g.
SQL injection attacks.
}
\author{
John Brzustowski \email{jbrzusto@REMOVE_THIS_PART_fastmail.fm}
}

